<!DOCTYPE HTML>
<html>
<head>
 <!--Import Google Icon Font-->
<link href="http://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
<!--Import materialize.css-->
<link type="text/css" rel="stylesheet" href="css/materialize.css"  media="screen,projection"/>
<script src="/socket.io/socket.io.js"></script>
<script src = "/js/three.js"></script>
<script src = "/js/GLTFLoader.js"></script>

<script type="text/javascript" src="js/FileSaver.min.js"></script>
<script type="text/javascript" src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
<script type="text/javascript" src="js/materialize.min.js"></script>

<title>Skate Control V{{ version }}</title>
<style>

.side-nav {
    transform: translateX(0%) !important;
}

  .roundButton {
    border-radius: 12px;
  }

    header, main, footer {
      padding-left: 300px;

    }
  </style>


<header>
<div>
<div class = "row">
<div class = "col l12">
<nav>
<div class = "nav-wrapper">
<a href = "#" class = "brand-logo dropdown-button" data-activates="dropdown1">
Skate Control V{{ version }}
<i class="material-icons right">arrow_drop_down</i> </a>
<ul id = "nav-desktop" class = "right hide-on-med-and-down">
<li class = "active"><a href = "/">Home</a></li>
<li><a href = "analytics.php">Analytics</a></li>
<li><a href = "settings.php" >Settings</a></li>
</ul>
</div>
</nav>
</div>
</div>
</div>
</header>

<ul id="slide-out" class="side-nav fixed grey lighten-2">
{{#active_pis}}
 <li><div class = "card-panel"><h4 class = "grey-text"><a href="#">Pis</a></h4></div></li><li><a href = "pi/{{ pi_id }}"class = "waves-effect waves-teal btn-flat white roundButton"><i class="material-icons">menu</i>{{ pi_name }}</a></li></ul>
 {{/active_pis}}
 {{^active_pis}}<p><blockquote>No Pis Online</blockquote>{{/active_pis}}
<main>
<div class = "row">
<div class="col l12">
	<ul class = "tabs">
		<li class="tab col s6"><a href="#main" class="active">Main Control</a></li>
        <li class="tab col s6"><a href="#viz">Data Visualizer</a></li>
    </ul>
</div>
<div class = "col s12" id = "main">
<ul class = collection col-l6>
<li class = "collection-item"><h6>Status</h6></li> <b>Online | Not Polling</b>
</ul>
<ul class = collection>
<li class = "collection-item"><h6>Software Version</h6><b>0.4</b></li> 
</ul>
<ul class = collection>
<li class = "collection-item"><h6>Capabilities</h6></li>
<li class = "collection-item">LED</li>
<li class = "collection-item">IMU</li>

<blockquote> ... Polling Config Options ...</blockquote>
  <form action="#">
    <p>
      <input class="with-gap" name="group1" type="radio" id="test1" onclick="sendMq('Pi_Control_Set_Config_1')" />
      <label for="test1">Euler </label>
    </p>
    <p>
      <input class="with-gap" name="group1" type="radio" id="test2" onclick="sendMq('Pi_Control_Set_Config_2')"/>
      <label for="test2">Quaternion</label>
    </p>
    <p>
      <input class="with-gap" name="group1" type="radio" id="test3" onclick="sendMq('Pi_Control_Set_Config_3')" />
      <label for="test3">Euler & Accelerometer</label>
    </p>
    <p>
      <input class="with-gap" name="group1" type="radio" id="test4"  onclick="sendMq('Pi_Control_Set_Config_4')"/>
      <label for="test4">Quaternion & Accelerometer</label>
    </p>
  </form>

<ul class = collection>
<a class="waves-effect waves-light btn-flat green" onclick="sendMq('Pi_Control_Start_Poll');">Start Polling</a>
<a class="waves-effect waves-light btn-flat red" onclick="sendMq('Pi_Control_Stop_Poll');">Stop Polling</a>
</ul>
<blockquote> ... TOOLS ...</blockquote>

<a class="waves-effect waves-light btn-flat" onclick="sendMq('Pi_Control_indicate')">Send Indicator</a>
<a class="waves-effect waves-light btn-flat" onclick="sendMq('Pi_Control_Ping')">Send Ping</a>
<a class="waves-effect waves-light btn-flat" onclick="sendMq('Pi_Control_Terminate')">Kill</a>
<a class="waves-effect waves-light btn-flat" onclick="sendMq('Pi_Control_Calibrate_IMU')">Recalibrate IMU</a>
<div class = "card-panel" id="calib_status">Calibration Status</div>
<ul class = collection>
<li class = "collection-item" id="loglist"><h>Logs</h6></li>
{{#logfiles.logs}}
<li class = "collection-item">{{ filename }}  <a class="waves-effect waves-light btn-flat" onclick="sendMq('Pi_Control_Request_Log_{{ index }}')">Download</a></li>
{{/logfiles.logs}}
{{^logfiles.logs}}<p><blockquote>No logs from this session</blockquote>{{/logfiles.logs}}
</ul>



</div>


<div class = "col s12" id = "viz">
<blockquote> ... Control ...</blockquote>

<a class="waves-effect waves-light btn-flat" onclick="sendMq('Pi_Control_Enable_Stream')">Start Poll Stream</a>
<a class="waves-effect waves-light btn-flat" onclick="sendMq('Pi_Control_Disable_Stream')">Stop Poll Stream</a>
<div id = "renderspace"></div>

</div>
<div class = "card grey col s12">
<p id = "newestFrame"></p>
<p>Fetch live logs at http://nwajagu.com/sensorlog/</p>
</div>
</div>
</main>
<script>

var loader = new THREE.GLTFLoader();
var scene = new THREE.Scene();
var rx,ry,rz;
var object;
loader.load( '/skateboard/scene.gltf', function ( gltf ) {
	object = gltf.scene;
  object.scale.set(10, 10, 10);

	scene.add( object);
	//console.log(object);

	}, undefined, function ( error ) {

		console.error( error );

	} );
var camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );

var renderer = new THREE.WebGLRenderer();

var container = document.getElementById('renderspace');
//console.log(container);
var w = 800;
var h = 800;
renderer.setSize(w,h);

container.appendChild( renderer.domElement );

var m4 = new THREE.Matrix4();
camera = new THREE.PerspectiveCamera( 60, w / h, 1, 200 );
camera.position.z = 10;
var rot = 0;

var socket = io();


function animate() {
requestAnimationFrame( animate );
object.rotation.x = rx;
object.rotation.y = ry;
object.rotation.z = rz;

//object.setRotationFromMatrix(m4);

//console.log(scene.children[0]);
renderer.render( scene, camera );
}


function sendMq(msg)
{
socket.emit("web_command",msg);
}

    var filename = "";
      socket.on('pi_alert', function(msg){
      	if(msg == "reload")
      	{
      		location.reload();
      	}
      //$('#messages').append($('<li>').text('frame count: ' + msg));
	  });
        socket.on('Web_Alert_NewLog_Name', function(msg){
 		filename = msg;
      //$('#messages').append($('<li>').text('frame count: ' + msg));
	  });

        socket.on('Web_Alert_NewLog_Data', function(msg){
     		var blob = new Blob([msg], {
			 type: "text/plain;charset=utf-8"
			});
			saveAs(blob,filename);
	  });

        socket.on('Web_Alert_NewCalib_Data', function(msg){
        	var calibDiv = document.getElementById("calib_status");
        	calibDiv.innerHTML = "<b>Calibration Progress: </b>" + msg;
	  });

                socket.on('Web_Alert_CalibrationComplete', function(msg){
        	var calibDiv = document.getElementById("calib_status");
        	calibDiv.innerHTML = "<b>Calibration Complete</b>";
	  });


     socket.on('Web_Alert_New_PollFrame', function(msg){
      //$('#messages').append($('<li>').text('frame count: ' + msg));
      rx = msg.x;
      ry = msg.y;
      rz = msg.y;
     //rot = new THREE.Euler(rx,ry,rz,'XYZ');
 	//m4.makeRotationFromEuler(rot);
 	//console.log(m4);
 	animate();
	var framep = document.getElementById("newestFrame");
	framep.innerHTML = msg;
      //console.log(m4);
 		//$("#axV").text(msg.data.ax);
 		//$("#ayV").text(msg.data.ay);
 		//$("#azV").text(msg.data.az);
 		//$("#rpmV").text( msg.data.rpm);
 		//$("#wsV").text(msg.data.wheelspeed);
 		//$("#fiV").text( msg.data.index);

	});



</script>
